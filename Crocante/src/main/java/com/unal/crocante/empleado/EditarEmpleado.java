/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.unal.crocante.empleado;

import com.unal.crocante.MysqlConexion;
import com.unal.crocante.cliente.EditarCliente;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author JFCowboy
 */
public class EditarEmpleado extends javax.swing.JFrame {

    String name;
    Connection conexion;

    public EditarEmpleado(String name) {
        this();
        this.name = name;
        MysqlConexion conector = new MysqlConexion("Venus", "gerente");
        conexion = conector.iniciarConexion();
        cargarCargos();
        llenarInfoEmpleado();
    }

    /**
     * Creates new form EditarEmpleado
     */
    public EditarEmpleado() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ccFormattedTextField = new javax.swing.JFormattedTextField();
        horasLabel = new javax.swing.JLabel();
        checkButton = new javax.swing.JButton();
        addLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        ccLabel = new javax.swing.JLabel();
        salarioFormattedTextField = new javax.swing.JFormattedTextField();
        cargoComboBox = new javax.swing.JComboBox<>();
        sedeFormattedTextField = new javax.swing.JFormattedTextField();
        horasFormattedTextField = new javax.swing.JFormattedTextField();
        salarioLabel = new javax.swing.JLabel();
        cargoLabel = new javax.swing.JLabel();
        sedeLabel = new javax.swing.JLabel();
        unactiveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        ccFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        horasLabel.setText("Horas:");

        checkButton.setText("Comprobar");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        addLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addLabel.setText("Editar Empleado");

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        addButton.setText("Aceptar");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        ccLabel.setText("CÃ©dula:");

        salarioFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        sedeFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        horasFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        salarioLabel.setText("Salario:");

        cargoLabel.setText("Cargo:");

        sedeLabel.setText("Sede:");

        unactiveButton.setText("Inactivar");
        unactiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unactiveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(unactiveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ccLabel)
                            .addComponent(horasLabel)
                            .addComponent(sedeLabel)
                            .addComponent(cargoLabel)
                            .addComponent(salarioLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cargoComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 86, Short.MAX_VALUE)
                                    .addComponent(salarioFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sedeFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(horasFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ccFormattedTextField, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkButton)))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addLabel)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ccLabel)
                    .addComponent(ccFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkButton))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horasLabel)
                    .addComponent(horasFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sedeLabel)
                    .addComponent(sedeFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargoLabel)
                    .addComponent(cargoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salarioLabel)
                    .addComponent(salarioFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unactiveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        long id;
        id = Long.parseLong(ccFormattedTextField.getText());

        String consulta = "select count(*) from persona where per_id = ? ;";
        PreparedStatement s;

        try {
            s = conexion.prepareStatement(consulta);
            s.setLong(1, id);
            ResultSet resultado = s.executeQuery();
            resultado.next();

            if (resultado.getInt(1) > 0) {
                EditarCliente emp = new EditarCliente(id);
                emp.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "No existe la persona", "Aviso", JOptionPane.WARNING_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(AgregarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No se insertaron datos validos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_checkButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        long cc;
        cc = Long.parseLong(ccFormattedTextField.getText());

        int horas = Integer.parseInt(horasFormattedTextField.getText());
        int sede = Integer.parseInt(sedeFormattedTextField.getText());
        String cargo = cargoComboBox.getSelectedItem().toString();
        int salario = Integer.parseInt(salarioFormattedTextField.getText());

        String consulta = "call update_empleado(?, ?, ?,?, ?);";

        PreparedStatement s;

        try {
            s = conexion.prepareStatement(consulta);
            s.setLong(1, cc);
            s.setInt(2, horas);
            s.setInt(3, sede);
            s.setString(4, cargo);
            s.setInt(5, salario);
            int resultado = s.executeUpdate();
            dispose();

        } catch (SQLException ex) {
            Logger.getLogger(AgregarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Fallo la ediciÃ³n", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        llenarInfoEmpleado();
    }//GEN-LAST:event_formWindowGainedFocus

    private void unactiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unactiveButtonActionPerformed
        String getEmpId = "select emp_id"
                + " from empleado join persona on (per_id = Persona_per_id)"
                + " where concat (per_nombre, ' ', per_apellido) = ?";

        PreparedStatement s;
        try {
            s = conexion.prepareStatement(getEmpId);
            s.setString(1, name);
            ResultSet resultado = s.executeQuery();
            resultado.next();

            String desactivar = "update empleado"
                    + " set emp_estado = ?"
                    + " where emp_id = ?";

            PreparedStatement d;
            try {
                d = conexion.prepareStatement(desactivar);
                d.setInt(1, 0);
                d.setInt(2, resultado.getInt(1));
                dispose();

            } catch (SQLException ex) {
                Logger.getLogger(EditarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (SQLException ex) {
            Logger.getLogger(EditarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_unactiveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarEmpleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> cargoComboBox;
    private javax.swing.JLabel cargoLabel;
    private javax.swing.JFormattedTextField ccFormattedTextField;
    private javax.swing.JLabel ccLabel;
    private javax.swing.JButton checkButton;
    private javax.swing.JFormattedTextField horasFormattedTextField;
    private javax.swing.JLabel horasLabel;
    private javax.swing.JFormattedTextField salarioFormattedTextField;
    private javax.swing.JLabel salarioLabel;
    private javax.swing.JFormattedTextField sedeFormattedTextField;
    private javax.swing.JLabel sedeLabel;
    private javax.swing.JButton unactiveButton;
    // End of variables declaration//GEN-END:variables

    private void llenarInfoEmpleado() {
        String consulta = "select * from vw_Empleado where nombre = ?;";
        PreparedStatement s;
        try {
            s = conexion.prepareStatement(consulta);
            s.setString(1, name);
            ResultSet resultado = s.executeQuery();
            resultado.next();

            horasFormattedTextField.setValue(resultado.getInt(5));
            sedeFormattedTextField.setValue(resultado.getInt(1));
            cargoComboBox.setSelectedItem(resultado.getString(3));
            salarioFormattedTextField.setValue(resultado.getInt(6));

            String getCC = "select * from persona"
                    + " where concat(per_nombre, ' ', per_apellido) = ? ;";
            System.out.println(getCC);

            PreparedStatement c;

            try {
                c = conexion.prepareStatement(getCC);
                c.setString(1, resultado.getString(2));
                ResultSet cedula = c.executeQuery();
                cedula.next();

                ccFormattedTextField.setValue(cedula.getLong(1));
            } catch (SQLException ex1) {
                Logger.getLogger(EditarEmpleado.class.getName()).log(Level.SEVERE, null, ex1);

            }

        } catch (SQLException ex) {
            Logger.getLogger(EditarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No se insertaron datos validos", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargarCargos() {
        String cargo = "select car_nombre"
                + " from Cargo;";
        PreparedStatement s;
        try {
            s = conexion.prepareStatement(cargo);
            ResultSet resultado = s.executeQuery();
            while (resultado.next()) {
                String car = resultado.getString(1);
                cargoComboBox.addItem(car);
            }

        } catch (SQLException ex) {
            Logger.getLogger(EditarEmpleado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
