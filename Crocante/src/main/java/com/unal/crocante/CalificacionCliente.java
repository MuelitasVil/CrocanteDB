package com.unal.crocante;

import com.mysql.cj.util.StringUtils;
import com.mysql.cj.xdevapi.Statement;
import com.unal.crocante.MysqlConexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Objects;
import java.util.Properties;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manuel Martinez
 */
public class CalificacionCliente extends javax.swing.JFrame {
    Connection conexion;
    /**
     * Creates new form Clientes_Calificacion
     */
    public CalificacionCliente() {
        initComponents();  
        MysqlConexion conector = new MysqlConexion("Venus", "gerente");
        conexion = conector.iniciarConexion();
        cargarTipos();
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        estrellas = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        ComboProducto = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        ComboTipo = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        calificacion = new javax.swing.JTable();
        jSeparator5 = new javax.swing.JSeparator();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(390, 403));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Calificacion del Producto");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        jButton1.setText("Ir a Comentario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 110, -1));

        jButton3.setLabel("Volver");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 110, -1));

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 90, 20));

        jLabel6.setText("Producto");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, -1, -1));

        estrellas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "5", "4", "3", "2", "1" }));
        estrellas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estrellasActionPerformed(evt);
            }
        });
        getContentPane().add(estrellas, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, -1, -1));

        jLabel8.setText("Num estrellas");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, 20));

        getContentPane().add(ComboProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 110, -1));

        jLabel11.setText("Tipo Producto");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, -1, -1));

        ComboTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTipoActionPerformed(evt);
            }
        });
        getContentPane().add(ComboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 110, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, -1, 130));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 370, 0));

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        calificacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Estrellas", "Cédula", "Producto", "Precio", "Tipo", "Estado producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(calificacion);
        if (calificacion.getColumnModel().getColumnCount() > 0) {
            calificacion.getColumnModel().getColumn(1).setResizable(false);
            calificacion.getColumnModel().getColumn(2).setResizable(false);
            calificacion.getColumnModel().getColumn(6).setResizable(false);
        }

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 140));
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 470, 10));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ComentarioCliente m = new ComentarioCliente();
        m.setVisible(true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            DefaultTableModel model = (DefaultTableModel) calificacion.getModel();
            while (model.getRowCount() > 0) {
                model.setRowCount(0);
            }
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CalificacionCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        MysqlConexion conector = new MysqlConexion("Venus", "gerente");
        Connection conexion = conector.iniciarConexion();
        int num = 6;
          
        String TipoPro = ComboProducto.getSelectedItem().toString();
        String NombrePro = ComboProducto.getSelectedItem().toString();
        String Estrellas = estrellas.getSelectedItem().toString();
        
             
         
                    
            if (!StringUtils.isNullOrEmpty(Estrellas)) {
            num = Integer.parseInt(Estrellas);
            

            String consulta = "select cal_fecha, cal_estrellas, Persona_per_id, pro_nombre, pro_precio, tip_tipo, pro_estado from calificación Join producto on (calificación.Producto_pro_id=producto.pro_id) Join tipo on (producto.Tipo_tip_id=Tipo.tip_id) where cal_estrellas Like '" + num + "' AND Producto.pro_nombre Like '" +NombrePro+ "' order by ven_fecha desc ;";

            PreparedStatement s;
            try {
            s = conexion.prepareStatement(consulta);
            ResultSet resultado = s.executeQuery();
            while (resultado.next()) {
                Date fecha = resultado.getDate(1);
                int star = resultado.getInt(2);
                int perso = resultado.getInt(3);
                String pro = resultado.getString(4);
                int precio = resultado.getInt(5);
                String tipo = resultado.getString(6);
                int pro_estado = resultado.getInt(7);

                System.out.println(String.format("%s %s %s %s %s %s %s", fecha.toString(), Integer.toString(star), Integer.toString(perso), pro.toString(), Integer.toString(precio), tipo.toString() ,Integer.toString(pro_estado)));
                DefaultTableModel model = (DefaultTableModel) calificacion.getModel();
                model.addRow(new Object[]{fecha, star,perso, pro, precio, tipo, pro_estado});
            }

            } catch (SQLException ex) {
            Logger.getLogger(CalificacionCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
            else
            {
             String consulta = "select cal_fecha, cal_estrellas, Persona_per_id, pro_nombre, pro_precio, tip_tipo, pro_estado from calificación Join producto on (calificación.Producto_pro_id=producto.pro_id) Join tipo on (producto.Tipo_tip_id=Tipo.tip_id) where Producto.pro_nombre Like '" +NombrePro+ "';";

            PreparedStatement s;
            try {
            s = conexion.prepareStatement(consulta);
            ResultSet resultado = s.executeQuery();
            while (resultado.next()) {
                Date fecha = resultado.getDate(1);
                int star = resultado.getInt(2);
                int perso = resultado.getInt(3);
                String pro = resultado.getString(4);
                int precio = resultado.getInt(5);
                String tipo = resultado.getString(6);
                int pro_estado = resultado.getInt(7);

                System.out.println(String.format("%s %s %s %s %s %s %s", fecha.toString(), Integer.toString(star), Integer.toString(perso), pro.toString(), Integer.toString(precio), tipo.toString() ,Integer.toString(pro_estado)));
                DefaultTableModel model = (DefaultTableModel) calificacion.getModel();
                model.addRow(new Object[]{fecha, star,perso, pro, precio, tipo, pro_estado});
            }

            } catch (SQLException ex) {
            Logger.getLogger(CalificacionCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
            
             
             
         
         
         
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void estrellasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estrellasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estrellasActionPerformed

    private void ComboTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTipoActionPerformed
        ComboProducto.removeAllItems();
        MysqlConexion conector = new MysqlConexion("Venus", "gerente");
        Connection conexion = conector.iniciarConexion();  
        
        String Tipo = ComboTipo.getSelectedItem().toString();// TODO add your handling code here:
        String consulta = "select pro_nombre from producto Join tipo on (producto.Tipo_tip_id=Tipo.tip_id) where Tipo.tip_tipo='" + Tipo + "';";
        PreparedStatement s;
        try {
            System.out.println(consulta);
            s = conexion.prepareStatement(consulta);
            System.out.println(s);
            ResultSet resultado = s.executeQuery();
            while (resultado.next()) {
                String Menu = resultado.getString(1);
                System.out.println(Menu);
                ComboProducto.addItem(Menu);
            }

        } catch (SQLException ex) {
            Logger.getLogger(CalificacionCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboTipoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
//try {
        //         Class.forName("com.mysql.jdbc.Driver");
        //     } catch (ClassNotFoundException ex) {
        //       Logger.getLogger(VentaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        // }
        // MysqlConexion conector = new MysqlConexion("Venus", "gerente");
        //Connection conexion = conector.iniciarConexion();

        // int precio = Integer.parseInt(precioFormattedTextField.getText());
        //String formaPago = formaPagoComboBox.getSelectedItem().toString();
        //String estadoPago = estadoPagoComboBox.getSelectedItem().toString();
        //String modalidad = modalidadComboBox.getSelectedItem().toString();
        //int id = Integer.parseInt(idFormattedTextField.getText());
        //String consulta = "insert into venta (ven_fecha, ven_precioTotal, ven_formaPago, ven_estadoPago, ven_modalidad, ven_diaSemana, Persona_per_id, Sede_sede_id,ven_estado) "
        //      + "        values (curdate(), " + precio + ", '" + formaPago + "', '" + estadoPago + "', '" + modalidad + "', dayname(curdate()), " + id + ", 1, 1);";
        //System.out.println(consulta);
        //PreparedStatement s;
        //try {
        // s = conexion.prepareStatement(consulta);
        // int resultado = s.executeUpdate();
        // JOptionPane.showMessageDialog(this, "Registro satisfactorio", "Exito", JOptionPane.INFORMATION_MESSAGE);
        // dispose();
        // } catch (SQLException ex) {
        //  Logger.getLogger(AgregarVenta.class.getName()).log(Level.SEVERE, null, ex);
        //  JOptionPane.showMessageDialog(this, "Imposible añadir el registro", "Error", JOptionPane.ERROR_MESSAGE);
        //}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalificacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalificacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalificacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalificacionCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalificacionCliente().setVisible(true);
            }
        });
    }
        private void cargarTipos() {
        String tipo = "select tip_tipo from Tipo;";
        PreparedStatement s;
        try {
            System.out.println(tipo);
            s = conexion.prepareStatement(tipo);
            System.out.println(s);
            ResultSet resultado = s.executeQuery();
            while (resultado.next()) {
                String Menu = resultado.getString(1);
                System.out.println(Menu);
                ComboTipo.addItem(Menu);
            }

        } catch (SQLException ex) {
            Logger.getLogger(CalificacionCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
        
        
        
        private void cargarTabla() {
        String consulta = "select cal_fecha, cal_estrellas, Persona_per_id, pro_nombre, pro_precio, tip_tipo, pro_estado from calificación Join producto on (calificación.Producto_pro_id=producto.pro_id) Join tipo on (producto.Tipo_tip_id=Tipo.tip_id);";

            PreparedStatement s;
            try {
            s = conexion.prepareStatement(consulta);
            ResultSet resultado = s.executeQuery();
            while (resultado.next()) {
                Date fecha = resultado.getDate(1);
                int star = resultado.getInt(2);
                int perso = resultado.getInt(3);
                String pro = resultado.getString(4);
                int precio = resultado.getInt(5);
                String tipo = resultado.getString(6);
                int pro_estado = resultado.getInt(7);

                System.out.println(String.format("%s %s %s %s %s %s %s", fecha.toString(), Integer.toString(star), Integer.toString(perso), pro.toString(), Integer.toString(precio), tipo.toString() ,Integer.toString(pro_estado)));
                DefaultTableModel model = (DefaultTableModel) calificacion.getModel();
                model.addRow(new Object[]{fecha, star,perso, pro, precio, tipo, pro_estado});
            }

            } catch (SQLException ex) {
            Logger.getLogger(CalificacionCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboProducto;
    private javax.swing.JComboBox<String> ComboTipo;
    private javax.swing.JTable calificacion;
    private javax.swing.JComboBox<String> estrellas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
